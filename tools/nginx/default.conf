###############################################################################################
# An NGINX configuration to test the dynamic module for the example SPA in an end-to-end manner
###############################################################################################

proxy_cache_path cache levels=1:2 keys_zone=api_cache:10m max_size=10g inactive=60m use_temp_path=off;
js_import        conf.d/oauth2.js;

server {
    listen      3000;
    server_name localhost;

    # To fit a complete response from OAuth server
    subrequest_output_buffer_size 16k;

    set $oauth_proxy_cookie_name_prefix "goalie"
    set $oauth_proxy_encryption_key     "oauth_proxy_encryption_key"
    set $oauth_client_id                "api-gateway-client"
    set $oauth_client_secret            "oauth_client_secret"

    location / {
        # Route directly to web static content
        proxy_pass http://host.docker.internal:4200;
    }

    location /ng-cli-ws {
      proxy_pass http://host.docker.internal:4200;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
      proxy_set_header Host $host;
    }

    location /oauth-agent/ {
        # Route directly to the OAuth Agent inside the cluster
        proxy_pass http://host.docker.internal:3334/;
    }

    location /api/ {
        # First run the OAuth Proxy plugin to translate secure cookies to opaque access tokens
        oauth_proxy on;
        oauth_proxy_cookie_name_prefix $oauth_proxy_cookie_name_prefix;
        oauth_proxy_encryption_key $oauth_proxy_encryption_key;
        oauth_proxy_trusted_web_origin http://host.docker.internal:3200;
        # oauth_proxy_cors_enabled $CORS_ENABLED_NGINX;

        # Then run the Phantom Token plugin to translate opaque access tokens to JWT access tokens
        phantom_token on;
        phantom_token_client_credential $oauth_client_id $oauth_client_secret;
        phantom_token_introspection_endpoint curity;

        # auth_request /_oauth2_token_introspection;

        # Then forward the JWT to the below API
        proxy_pass http://host.docker.internal:3333/;
    }

    location curity {
        # Do the introspection when required
        proxy_pass https://login.mp.exclaimertest.net/oauth/v2/oauth-introspect;
        proxy_cache_methods POST;
        proxy_cache api_cache;
        proxy_cache_key $request_body;
        proxy_ignore_headers Set-Cookie;
    }

    # location = /_oauth2_token_introspection {
    #     internal;
    #     js_content oauth2.introspectAccessToken;
    # }

    # location /_oauth2_send_request {
    #     internal;
    #     proxy_method      POST;
    #     proxy_set_header  Content-Type "application/x-www-form-urlencoded";
    #     proxy_set_body    "token=$arg_token&client_id=$oauth_client_id&client_secret=$oauth_client_secret";
    #     proxy_pass        https://login.mp.exclaimertest.net/oauth/v2/oauth-introspect;
    # }
}
