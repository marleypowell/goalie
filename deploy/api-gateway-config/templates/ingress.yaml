apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: 'letsencrypt-prod'
    nginx.ingress.kubernetes.io/configuration-snippet: |
      oauth_proxy on;
      oauth_proxy_cookie_name_prefix goalie;
      oauth_proxy_encryption_key {{ .Values.oauthProxy.encryptionKey }};
      oauth_proxy_trusted_web_origin https://goalie.mp.exclaimertest.net;
      phantom_token on;
      phantom_token_client_credential api-gateway-client {{ .Values.oauthProxy.clientSecret }};
      phantom_token_introspection_endpoint curity;
      phantom_token_scopes read;
      error_log  /var/log/nginx/error.log  info;
    nginx.ingress.kubernetes.io/server-snippet: |
      location curity {
          proxy_pass http://curity-idsvr-runtime-svc.curity.svc.cluster.local:8443/oauth/v2/oauth-introspect;
          proxy_cache_methods POST;
          proxy_cache api_cache;
          proxy_cache_key Â§request_body[];
          proxy_ignore_headers Set-Cookie;
      }
    nginx.ingress.kubernetes.io/enable-cors: 'true'
    nginx.ingress.kubernetes.io/cors-allow-credentials: 'true'
    nginx.ingress.kubernetes.io/cors-allow-origin: https://goalie.mp.exclaimertest.net
    nginx.ingress.kubernetes.io/cors-allow-headers: 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,x-goalie-csrf'
    nginx.ingress.kubernetes.io/use-regex: 'true'
    nginx.ingress.kubernetes.io/rewrite-target: /api/$2
  name: api-gateway-ingress
spec:
  rules:
    - host: api.mp.exclaimertest.net
      http:
        paths:
          - backend:
              service:
                name: api-gateway-service
                port:
                  name: http-port
            path: /api(/|$)(.*)
            pathType: ImplementationSpecific
  tls:
    - hosts:
        - api.mp.exclaimertest.net
      secretName: api-aks-tls
